/*
 * RSA SecurID Authentication API
 * This defines the RSA SecurID Authentication API. This supports a REST interface to perform multi-factor, multi-step authentications. The caller must invoke the Initialize interface to start an authentication attempt and call the Verify method until the ResponseCode is either SUCCESS, ERROR, or FAIL. Each server response contains CredentialMethods, one of which must be provided in the subjectCredentials of the next Verify call. The server verifies the entered credentials and responds with CHALLENGE or IN_PROCESS if additional information (or confirmations) are required to complete the authentication. The IN_PROCESS status is returned for authentication steps that may take a lot of time. The caller should invoke the Verify call again using the same referenceID to 'poll' on the result of a previous IN_PROCESS authentication. Alternatively, Verify responds with SUCCESS if all required authentication credentials have been provided, FAIL if the verification of a credential failed, or ERROR for malformed requests.
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rsa.securid.client.api;

import com.rsa.securid.client.api.ClientApi;
import com.rsa.securid.client.ApiException;
import com.rsa.securid.client.model.NameValuePair;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClientApi
 */
@Ignore
public class ClientApiTest {

    private final ClientApi api = new ClientApi();

    
    /**
     * Provides I18N language resources.
     *
     * The client can use this interface to GET prompt text values for all prompts or for a specific prompt.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getResourceIdTest() throws ApiException {
        String lang = null;
        String resourceId = null;
        List<NameValuePair> response = api.getResourceId(lang, resourceId);

        // TODO: test validations
    }
    
}
