/*
 * RSA SecurID Authentication API
 * This defines the RSA SecurID Authentication API. This supports a REST interface to perform multi-factor, multi-step authentications. The caller must invoke the Initialize interface to start an authentication attempt and call the Verify method until the ResponseCode is either SUCCESS, ERROR, or FAIL. Each server response contains CredentialMethods, one of which must be provided in the subjectCredentials of the next Verify call. The server verifies the entered credentials and responds with CHALLENGE or IN_PROCESS if additional information (or confirmations) are required to complete the authentication. The IN_PROCESS status is returned for authentication steps that may take a lot of time. The caller should invoke the Verify call again using the same referenceID to 'poll' on the result of a previous IN_PROCESS authentication. Alternatively, Verify responds with SUCCESS if all required authentication credentials have been provided, FAIL if the verification of a credential failed, or ERROR for malformed requests.
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rsa.securid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.rsa.securid.client.model.Credential;
import com.rsa.securid.client.model.MessageContext;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * This contains an array of credentials to be verified and an authentication context. The context was returned by either the initialize call or a previous verify call. The context must be updated from the previous server response to contain a new, random \&quot;messageId\&quot;. The \&quot;messageId\&quot; returned from the previous server response must be copied to the \&quot;inResponseTo\&quot; field in the context at each call.
 */
@ApiModel(description = "This contains an array of credentials to be verified and an authentication context. The context was returned by either the initialize call or a previous verify call. The context must be updated from the previous server response to contain a new, random \"messageId\". The \"messageId\" returned from the previous server response must be copied to the \"inResponseTo\" field in the context at each call.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-11T15:33:28.173Z")
public class Verify {
  @SerializedName("subjectCredentials")
  private List<Credential> subjectCredentials = new ArrayList<Credential>();

  @SerializedName("context")
  private MessageContext context = null;

  public Verify subjectCredentials(List<Credential> subjectCredentials) {
    this.subjectCredentials = subjectCredentials;
    return this;
  }

  public Verify addSubjectCredentialsItem(Credential subjectCredentialsItem) {
    this.subjectCredentials.add(subjectCredentialsItem);
    return this;
  }

   /**
   * This provides an array of collected credentials. Required.
   * @return subjectCredentials
  **/
  @ApiModelProperty(required = true, value = "This provides an array of collected credentials. Required.")
  public List<Credential> getSubjectCredentials() {
    return subjectCredentials;
  }

  public void setSubjectCredentials(List<Credential> subjectCredentials) {
    this.subjectCredentials = subjectCredentials;
  }

  public Verify context(MessageContext context) {
    this.context = context;
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @ApiModelProperty(required = true, value = "")
  public MessageContext getContext() {
    return context;
  }

  public void setContext(MessageContext context) {
    this.context = context;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Verify verify = (Verify) o;
    return Objects.equals(this.subjectCredentials, verify.subjectCredentials) &&
        Objects.equals(this.context, verify.context);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subjectCredentials, context);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Verify {\n");
    
    sb.append("    subjectCredentials: ").append(toIndentedString(subjectCredentials)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

