/*
 * RSA SecurID Authentication API
 * This defines the RSA SecurID Authentication API. This supports a REST interface to perform multi-factor, multi-step authentications. The caller must invoke the Initialize interface to start an authentication attempt and call the Verify method until the ResponseCode is either SUCCESS, ERROR, or FAIL. Each server response contains CredentialMethods, one of which must be provided in the subjectCredentials of the next Verify call. The server verifies the entered credentials and responds with CHALLENGE or IN_PROCESS if additional information (or confirmations) are required to complete the authentication. The IN_PROCESS status is returned for authentication steps that may take a lot of time. The caller should invoke the Verify call again using the same referenceID to 'poll' on the result of a previous IN_PROCESS authentication. Alternatively, Verify responds with SUCCESS if all required authentication credentials have been provided, FAIL if the verification of a credential failed, or ERROR for malformed requests.
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rsa.securid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.rsa.securid.client.model.ClientDetails;
import com.rsa.securid.client.model.Credential;
import com.rsa.securid.client.model.MessageContext;
import com.rsa.securid.client.model.NameValuePair;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * Authentication request initialization parameters. This contains information to start an authentication attempt. This may contain credentials and information about the assurance requirements (methods) being satisfied.
 */
@ApiModel(description = "Authentication request initialization parameters. This contains information to start an authentication attempt. This may contain credentials and information about the assurance requirements (methods) being satisfied.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-11T15:33:28.173Z")
public class Initialize {
  @SerializedName("authnAttemptTimeout")
  private BigDecimal authnAttemptTimeout = null;

  @SerializedName("tenantId")
  private String tenantId = null;

  @SerializedName("clientId")
  private String clientId = null;

  @SerializedName("subjectName")
  private String subjectName = null;

  @SerializedName("display")
  private String display = null;

  @SerializedName("lang")
  private String lang = "us_EN";

  @SerializedName("assurancePolicyId")
  private String assurancePolicyId = null;

  /**
   * This may contain the required assurance level for authentication. Mutually exclusive with \&quot;assurancePolicyId\&quot; and \&quot;authMethodId\&quot;. Optional.
   */
  @JsonAdapter(AssuranceLevelEnum.Adapter.class)
  public enum AssuranceLevelEnum {
    LOW("LOW"),
    
    MEDIUM("MEDIUM"),
    
    HIGH("HIGH");

    private String value;

    AssuranceLevelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AssuranceLevelEnum fromValue(String text) {
      for (AssuranceLevelEnum b : AssuranceLevelEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AssuranceLevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AssuranceLevelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AssuranceLevelEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AssuranceLevelEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("assuranceLevel")
  private AssuranceLevelEnum assuranceLevel = null;

  @SerializedName("authMethodId")
  private String authMethodId = null;

  @SerializedName("sessionAttributes")
  private List<NameValuePair> sessionAttributes = null;

  @SerializedName("subjectCredentials")
  private List<Credential> subjectCredentials = null;

  @SerializedName("clientDetails")
  private ClientDetails clientDetails = null;

  @SerializedName("context")
  private MessageContext context = null;

  @SerializedName("keepAttempt")
  private Boolean keepAttempt = false;

  public Initialize authnAttemptTimeout(BigDecimal authnAttemptTimeout) {
    this.authnAttemptTimeout = authnAttemptTimeout;
    return this;
  }

   /**
   * A number in seconds representing how long the server will keep the authentication attempt ID available after each call. During this time is is possible to make other calls using the \&quot;authnAttemptId\&quot;. The server may reject initialization requests if the value provided is beyond the allowable maximum. Defaults to a server-defined session lifetime. Optional.
   * maximum: 900
   * @return authnAttemptTimeout
  **/
  @ApiModelProperty(value = "A number in seconds representing how long the server will keep the authentication attempt ID available after each call. During this time is is possible to make other calls using the \"authnAttemptId\". The server may reject initialization requests if the value provided is beyond the allowable maximum. Defaults to a server-defined session lifetime. Optional.")
  public BigDecimal getAuthnAttemptTimeout() {
    return authnAttemptTimeout;
  }

  public void setAuthnAttemptTimeout(BigDecimal authnAttemptTimeout) {
    this.authnAttemptTimeout = authnAttemptTimeout;
  }

  public Initialize tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

   /**
   * Tenant identifier valid at the IA Service. This is also provided in the request URL. If this is provided, it must match the tenant ID derived from the requst URL or the call may be rejected. Optional.
   * @return tenantId
  **/
  @ApiModelProperty(value = "Tenant identifier valid at the IA Service. This is also provided in the request URL. If this is provided, it must match the tenant ID derived from the requst URL or the call may be rejected. Optional.")
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }

  public Initialize clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Client identifier valid at the IA Service. This may either be a logical client ID  such as \&quot;RADIUS\&quot;, \&quot;Chrome\&quot;, or may be a Fully Qualified Host Name (FQHN) of the client host. This may be used by the server to determine access control. If a clientId is not provided, a default value may be derived from the HTTP header information. Optional.
   * @return clientId
  **/
  @ApiModelProperty(value = "Client identifier valid at the IA Service. This may either be a logical client ID  such as \"RADIUS\", \"Chrome\", or may be a Fully Qualified Host Name (FQHN) of the client host. This may be used by the server to determine access control. If a clientId is not provided, a default value may be derived from the HTTP header information. Optional.")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public Initialize subjectName(String subjectName) {
    this.subjectName = subjectName;
    return this;
  }

   /**
   * User/Account identifier. This shall contain the login ID of the principal requesting the authentication. The format depends on the context. This value may be a AD \&quot;samAccountName\&quot;, an email address. Required.
   * @return subjectName
  **/
  @ApiModelProperty(required = true, value = "User/Account identifier. This shall contain the login ID of the principal requesting the authentication. The format depends on the context. This value may be a AD \"samAccountName\", an email address. Required.")
  public String getSubjectName() {
    return subjectName;
  }

  public void setSubjectName(String subjectName) {
    this.subjectName = subjectName;
  }

  public Initialize display(String display) {
    this.display = display;
    return this;
  }

   /**
   * This is intended to provide a \&quot;hint\&quot; to the server as to the display characteristics or capabilities of the client. Possible values may indicate whether the client is rendering the interface in a web page, RADIUS client, Windows, etc. Used by the server to provide responses tailored for rendering on the client. Optional.
   * @return display
  **/
  @ApiModelProperty(value = "This is intended to provide a \"hint\" to the server as to the display characteristics or capabilities of the client. Possible values may indicate whether the client is rendering the interface in a web page, RADIUS client, Windows, etc. Used by the server to provide responses tailored for rendering on the client. Optional.")
  public String getDisplay() {
    return display;
  }

  public void setDisplay(String display) {
    this.display = display;
  }

  public Initialize lang(String lang) {
    this.lang = lang;
    return this;
  }

   /**
   * This defines the language for prompt text provided by the interface in the \&quot;MethodPrompt\&quot; response. Optional.
   * @return lang
  **/
  @ApiModelProperty(value = "This defines the language for prompt text provided by the interface in the \"MethodPrompt\" response. Optional.")
  public String getLang() {
    return lang;
  }

  public void setLang(String lang) {
    this.lang = lang;
  }

  public Initialize assurancePolicyId(String assurancePolicyId) {
    this.assurancePolicyId = assurancePolicyId;
    return this;
  }

   /**
   * This may contain the name of a policy which should be resolved in policy decision stage. For now, we assume this is a policy name. Mutually exclusive with \&quot;assuranceLevel\&quot; and \&quot;authMethodId\&quot;. Optional.
   * @return assurancePolicyId
  **/
  @ApiModelProperty(value = "This may contain the name of a policy which should be resolved in policy decision stage. For now, we assume this is a policy name. Mutually exclusive with \"assuranceLevel\" and \"authMethodId\". Optional.")
  public String getAssurancePolicyId() {
    return assurancePolicyId;
  }

  public void setAssurancePolicyId(String assurancePolicyId) {
    this.assurancePolicyId = assurancePolicyId;
  }

  public Initialize assuranceLevel(AssuranceLevelEnum assuranceLevel) {
    this.assuranceLevel = assuranceLevel;
    return this;
  }

   /**
   * This may contain the required assurance level for authentication. Mutually exclusive with \&quot;assurancePolicyId\&quot; and \&quot;authMethodId\&quot;. Optional.
   * @return assuranceLevel
  **/
  @ApiModelProperty(value = "This may contain the required assurance level for authentication. Mutually exclusive with \"assurancePolicyId\" and \"authMethodId\". Optional.")
  public AssuranceLevelEnum getAssuranceLevel() {
    return assuranceLevel;
  }

  public void setAssuranceLevel(AssuranceLevelEnum assuranceLevel) {
    this.assuranceLevel = assuranceLevel;
  }

  public Initialize authMethodId(String authMethodId) {
    this.authMethodId = authMethodId;
    return this;
  }

   /**
   * This may contain the name of an authentication method which should be used to authenticate. Mutually exclusive with \&quot;assurancePolicyId\&quot; and \&quot;assuranceLevel\&quot;. Optional.
   * @return authMethodId
  **/
  @ApiModelProperty(value = "This may contain the name of an authentication method which should be used to authenticate. Mutually exclusive with \"assurancePolicyId\" and \"assuranceLevel\". Optional.")
  public String getAuthMethodId() {
    return authMethodId;
  }

  public void setAuthMethodId(String authMethodId) {
    this.authMethodId = authMethodId;
  }

  public Initialize sessionAttributes(List<NameValuePair> sessionAttributes) {
    this.sessionAttributes = sessionAttributes;
    return this;
  }

  public Initialize addSessionAttributesItem(NameValuePair sessionAttributesItem) {
    if (this.sessionAttributes == null) {
      this.sessionAttributes = new ArrayList<NameValuePair>();
    }
    this.sessionAttributes.add(sessionAttributesItem);
    return this;
  }

   /**
   * This is a list of collected data related to the event. The session attribute values may be used in policy decision flow. Examples of possible values include local IP address, HTML5/GEO location, device fingerprint, accessed resource name (if possible), etc. These values are intended for use in RISK/TRUST evaluation engine. Possible keys will be provided in a session attribute dictionary. Optional.
   * @return sessionAttributes
  **/
  @ApiModelProperty(value = "This is a list of collected data related to the event. The session attribute values may be used in policy decision flow. Examples of possible values include local IP address, HTML5/GEO location, device fingerprint, accessed resource name (if possible), etc. These values are intended for use in RISK/TRUST evaluation engine. Possible keys will be provided in a session attribute dictionary. Optional.")
  public List<NameValuePair> getSessionAttributes() {
    return sessionAttributes;
  }

  public void setSessionAttributes(List<NameValuePair> sessionAttributes) {
    this.sessionAttributes = sessionAttributes;
  }

  public Initialize subjectCredentials(List<Credential> subjectCredentials) {
    this.subjectCredentials = subjectCredentials;
    return this;
  }

  public Initialize addSubjectCredentialsItem(Credential subjectCredentialsItem) {
    if (this.subjectCredentials == null) {
      this.subjectCredentials = new ArrayList<Credential>();
    }
    this.subjectCredentials.add(subjectCredentialsItem);
    return this;
  }

   /**
   * This can be used to provide a list of previously collected credentials. For example, this can be used to provide a basic credential like a password to MFA interface with the initialize call (to facilitate a &#39;single-step\&quot; authentication process). Optional.
   * @return subjectCredentials
  **/
  @ApiModelProperty(value = "This can be used to provide a list of previously collected credentials. For example, this can be used to provide a basic credential like a password to MFA interface with the initialize call (to facilitate a 'single-step\" authentication process). Optional.")
  public List<Credential> getSubjectCredentials() {
    return subjectCredentials;
  }

  public void setSubjectCredentials(List<Credential> subjectCredentials) {
    this.subjectCredentials = subjectCredentials;
  }

  public Initialize clientDetails(ClientDetails clientDetails) {
    this.clientDetails = clientDetails;
    return this;
  }

   /**
   * Get clientDetails
   * @return clientDetails
  **/
  @ApiModelProperty(value = "")
  public ClientDetails getClientDetails() {
    return clientDetails;
  }

  public void setClientDetails(ClientDetails clientDetails) {
    this.clientDetails = clientDetails;
  }

  public Initialize context(MessageContext context) {
    this.context = context;
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @ApiModelProperty(required = true, value = "")
  public MessageContext getContext() {
    return context;
  }

  public void setContext(MessageContext context) {
    this.context = context;
  }

  public Initialize keepAttempt(Boolean keepAttempt) {
    this.keepAttempt = keepAttempt;
    return this;
  }

   /**
   * By default, completed authentication attempts are removed from the server. A \&quot;true\&quot; value can be provided to have complete or cancelled authentication attempts retained until they are removed or expire. This value should be set to \&quot;true\&quot; if a subsequent CheckStatus call will be made. A &#39;complete&#39; authentication attempt is any attempt for which an Initialize or Verify call have returned a ResponseCode other than CHALLENGE or IN_PROCESS.
   * @return keepAttempt
  **/
  @ApiModelProperty(value = "By default, completed authentication attempts are removed from the server. A \"true\" value can be provided to have complete or cancelled authentication attempts retained until they are removed or expire. This value should be set to \"true\" if a subsequent CheckStatus call will be made. A 'complete' authentication attempt is any attempt for which an Initialize or Verify call have returned a ResponseCode other than CHALLENGE or IN_PROCESS.")
  public Boolean isKeepAttempt() {
    return keepAttempt;
  }

  public void setKeepAttempt(Boolean keepAttempt) {
    this.keepAttempt = keepAttempt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Initialize initialize = (Initialize) o;
    return Objects.equals(this.authnAttemptTimeout, initialize.authnAttemptTimeout) &&
        Objects.equals(this.tenantId, initialize.tenantId) &&
        Objects.equals(this.clientId, initialize.clientId) &&
        Objects.equals(this.subjectName, initialize.subjectName) &&
        Objects.equals(this.display, initialize.display) &&
        Objects.equals(this.lang, initialize.lang) &&
        Objects.equals(this.assurancePolicyId, initialize.assurancePolicyId) &&
        Objects.equals(this.assuranceLevel, initialize.assuranceLevel) &&
        Objects.equals(this.authMethodId, initialize.authMethodId) &&
        Objects.equals(this.sessionAttributes, initialize.sessionAttributes) &&
        Objects.equals(this.subjectCredentials, initialize.subjectCredentials) &&
        Objects.equals(this.clientDetails, initialize.clientDetails) &&
        Objects.equals(this.context, initialize.context) &&
        Objects.equals(this.keepAttempt, initialize.keepAttempt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authnAttemptTimeout, tenantId, clientId, subjectName, display, lang, assurancePolicyId, assuranceLevel, authMethodId, sessionAttributes, subjectCredentials, clientDetails, context, keepAttempt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Initialize {\n");
    
    sb.append("    authnAttemptTimeout: ").append(toIndentedString(authnAttemptTimeout)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    subjectName: ").append(toIndentedString(subjectName)).append("\n");
    sb.append("    display: ").append(toIndentedString(display)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    assurancePolicyId: ").append(toIndentedString(assurancePolicyId)).append("\n");
    sb.append("    assuranceLevel: ").append(toIndentedString(assuranceLevel)).append("\n");
    sb.append("    authMethodId: ").append(toIndentedString(authMethodId)).append("\n");
    sb.append("    sessionAttributes: ").append(toIndentedString(sessionAttributes)).append("\n");
    sb.append("    subjectCredentials: ").append(toIndentedString(subjectCredentials)).append("\n");
    sb.append("    clientDetails: ").append(toIndentedString(clientDetails)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    keepAttempt: ").append(toIndentedString(keepAttempt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

