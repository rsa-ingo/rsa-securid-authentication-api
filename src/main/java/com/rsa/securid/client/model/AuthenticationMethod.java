/*
 * RSA SecurID Authentication API
 * This defines the RSA SecurID Authentication API. This supports a REST interface to perform multi-factor, multi-step authentications. The caller must invoke the Initialize interface to start an authentication attempt and call the Verify method until the ResponseCode is either SUCCESS, ERROR, or FAIL. Each server response contains CredentialMethods, one of which must be provided in the subjectCredentials of the next Verify call. The server verifies the entered credentials and responds with CHALLENGE or IN_PROCESS if additional information (or confirmations) are required to complete the authentication. The IN_PROCESS status is returned for authentication steps that may take a lot of time. The caller should invoke the Verify call again using the same referenceID to 'poll' on the result of a previous IN_PROCESS authentication. Alternatively, Verify responds with SUCCESS if all required authentication credentials have been provided, FAIL if the verification of a credential failed, or ERROR for malformed requests.
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rsa.securid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.rsa.securid.client.model.AuthenticationMethodVersion;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * Authentication method. This will typically represent a prompt to which the user must respond.
 */
@ApiModel(description = "Authentication method. This will typically represent a prompt to which the user must respond.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-11T15:33:28.173Z")
public class AuthenticationMethod {
  @SerializedName("methodId")
  private String methodId = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("priority")
  private BigDecimal priority = null;

  @SerializedName("versions")
  private List<AuthenticationMethodVersion> versions = new ArrayList<AuthenticationMethodVersion>();

  public AuthenticationMethod methodId(String methodId) {
    this.methodId = methodId;
    return this;
  }

   /**
   * Authentication method ID. This value should be provided back to the server in the CredentialValues name-value array in the response. The methodId will be the name and the value will be the value entered by the end-user or provided by the client (unless no value is required, see valueRequired).
   * @return methodId
  **/
  @ApiModelProperty(required = true, value = "Authentication method ID. This value should be provided back to the server in the CredentialValues name-value array in the response. The methodId will be the name and the value will be the value entered by the end-user or provided by the client (unless no value is required, see valueRequired).")
  public String getMethodId() {
    return methodId;
  }

  public void setMethodId(String methodId) {
    this.methodId = methodId;
  }

  public AuthenticationMethod displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The display name of the authentication method ID. If the server response does not contain a displayName, use the methodId.
   * @return displayName
  **/
  @ApiModelProperty(value = "The display name of the authentication method ID. If the server response does not contain a displayName, use the methodId.")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public AuthenticationMethod priority(BigDecimal priority) {
    this.priority = priority;
    return this;
  }

   /**
   * This provides information to the client to indicate the order or priority that should be used when processing methods. Values start at 1 with 1 being the highest priority and larger numbers indicating lower priorities. Generally used to indicate time-sensitive methods to which the user should respond first.
   * @return priority
  **/
  @ApiModelProperty(value = "This provides information to the client to indicate the order or priority that should be used when processing methods. Values start at 1 with 1 being the highest priority and larger numbers indicating lower priorities. Generally used to indicate time-sensitive methods to which the user should respond first.")
  public BigDecimal getPriority() {
    return priority;
  }

  public void setPriority(BigDecimal priority) {
    this.priority = priority;
  }

  public AuthenticationMethod versions(List<AuthenticationMethodVersion> versions) {
    this.versions = versions;
    return this;
  }

  public AuthenticationMethod addVersionsItem(AuthenticationMethodVersion versionsItem) {
    this.versions.add(versionsItem);
    return this;
  }

   /**
   * Array of method-specific name/value pairs.
   * @return versions
  **/
  @ApiModelProperty(required = true, value = "Array of method-specific name/value pairs.")
  public List<AuthenticationMethodVersion> getVersions() {
    return versions;
  }

  public void setVersions(List<AuthenticationMethodVersion> versions) {
    this.versions = versions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticationMethod authenticationMethod = (AuthenticationMethod) o;
    return Objects.equals(this.methodId, authenticationMethod.methodId) &&
        Objects.equals(this.displayName, authenticationMethod.displayName) &&
        Objects.equals(this.priority, authenticationMethod.priority) &&
        Objects.equals(this.versions, authenticationMethod.versions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(methodId, displayName, priority, versions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthenticationMethod {\n");
    
    sb.append("    methodId: ").append(toIndentedString(methodId)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    versions: ").append(toIndentedString(versions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

