/*
 * RSA SecurID Authentication API
 * This defines the RSA SecurID Authentication API. This supports a REST interface to perform multi-factor, multi-step authentications. The caller must invoke the Initialize interface to start an authentication attempt and call the Verify method until the ResponseCode is either SUCCESS, ERROR, or FAIL. Each server response contains CredentialMethods, one of which must be provided in the subjectCredentials of the next Verify call. The server verifies the entered credentials and responds with CHALLENGE or IN_PROCESS if additional information (or confirmations) are required to complete the authentication. The IN_PROCESS status is returned for authentication steps that may take a lot of time. The caller should invoke the Verify call again using the same referenceID to 'poll' on the result of a previous IN_PROCESS authentication. Alternatively, Verify responds with SUCCESS if all required authentication credentials have been provided, FAIL if the verification of a credential failed, or ERROR for malformed requests.
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rsa.securid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.rsa.securid.client.model.NameValuePair;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * This contains an array of credential input values to be verified. The \&quot;name\&quot; field of the \&quot;collectedInputs\&quot; name-value pair is expected to be a \&quot;methodId\&quot; value from the \&quot;AuthenticationMethod\&quot; returned by the server.
 */
@ApiModel(description = "This contains an array of credential input values to be verified. The \"name\" field of the \"collectedInputs\" name-value pair is expected to be a \"methodId\" value from the \"AuthenticationMethod\" returned by the server.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-11T15:33:28.173Z")
public class Credential {
  @SerializedName("methodId")
  private String methodId = null;

  @SerializedName("referenceId")
  private String referenceId = null;

  @SerializedName("versionId")
  private String versionId = null;

  @SerializedName("collectedInputs")
  private List<NameValuePair> collectedInputs = new ArrayList<NameValuePair>();

  public Credential methodId(String methodId) {
    this.methodId = methodId;
    return this;
  }

   /**
   * This is the method for which the input was collected.
   * @return methodId
  **/
  @ApiModelProperty(required = true, value = "This is the method for which the input was collected.")
  public String getMethodId() {
    return methodId;
  }

  public void setMethodId(String methodId) {
    this.methodId = methodId;
  }

  public Credential referenceId(String referenceId) {
    this.referenceId = referenceId;
    return this;
  }

   /**
   * This is the identifier that the server returns in the previous response, in reference to the current verification state of the method. See referenceId in AuthenticationMethodVersion.
   * @return referenceId
  **/
  @ApiModelProperty(value = "This is the identifier that the server returns in the previous response, in reference to the current verification state of the method. See referenceId in AuthenticationMethodVersion.")
  public String getReferenceId() {
    return referenceId;
  }

  public void setReferenceId(String referenceId) {
    this.referenceId = referenceId;
  }

  public Credential versionId(String versionId) {
    this.versionId = versionId;
    return this;
  }

   /**
   * This is the version of method implementation supported and collected by a client.
   * @return versionId
  **/
  @ApiModelProperty(value = "This is the version of method implementation supported and collected by a client.")
  public String getVersionId() {
    return versionId;
  }

  public void setVersionId(String versionId) {
    this.versionId = versionId;
  }

  public Credential collectedInputs(List<NameValuePair> collectedInputs) {
    this.collectedInputs = collectedInputs;
    return this;
  }

  public Credential addCollectedInputsItem(NameValuePair collectedInputsItem) {
    this.collectedInputs.add(collectedInputsItem);
    return this;
  }

   /**
   * This provides an array of one or more collected credential input values.  Required.
   * @return collectedInputs
  **/
  @ApiModelProperty(required = true, value = "This provides an array of one or more collected credential input values.  Required.")
  public List<NameValuePair> getCollectedInputs() {
    return collectedInputs;
  }

  public void setCollectedInputs(List<NameValuePair> collectedInputs) {
    this.collectedInputs = collectedInputs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Credential credential = (Credential) o;
    return Objects.equals(this.methodId, credential.methodId) &&
        Objects.equals(this.referenceId, credential.referenceId) &&
        Objects.equals(this.versionId, credential.versionId) &&
        Objects.equals(this.collectedInputs, credential.collectedInputs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(methodId, referenceId, versionId, collectedInputs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Credential {\n");
    
    sb.append("    methodId: ").append(toIndentedString(methodId)).append("\n");
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("    collectedInputs: ").append(toIndentedString(collectedInputs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

