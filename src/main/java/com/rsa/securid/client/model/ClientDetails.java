/*
 * RSA SecurID Authentication API
 * This defines the RSA SecurID Authentication API. This supports a REST interface to perform multi-factor, multi-step authentications. The caller must invoke the Initialize interface to start an authentication attempt and call the Verify method until the ResponseCode is either SUCCESS, ERROR, or FAIL. Each server response contains CredentialMethods, one of which must be provided in the subjectCredentials of the next Verify call. The server verifies the entered credentials and responds with CHALLENGE or IN_PROCESS if additional information (or confirmations) are required to complete the authentication. The IN_PROCESS status is returned for authentication steps that may take a lot of time. The caller should invoke the Verify call again using the same referenceID to 'poll' on the result of a previous IN_PROCESS authentication. Alternatively, Verify responds with SUCCESS if all required authentication credentials have been provided, FAIL if the verification of a credential failed, or ERROR for malformed requests.
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rsa.securid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * This contains the client&#39;s details.
 */
@ApiModel(description = "This contains the client's details.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-11T15:33:28.173Z")
public class ClientDetails {
  @SerializedName("hostname")
  private String hostname = null;

  @SerializedName("softwareId")
  private String softwareId = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("component")
  private String component = null;

  @SerializedName("platform")
  private String platform = null;

  public ClientDetails hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Client fully qualified hostname.
   * @return hostname
  **/
  @ApiModelProperty(value = "Client fully qualified hostname.")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public ClientDetails softwareId(String softwareId) {
    this.softwareId = softwareId;
    return this;
  }

   /**
   * Unique ID generated for each client installation.
   * @return softwareId
  **/
  @ApiModelProperty(value = "Unique ID generated for each client installation.")
  public String getSoftwareId() {
    return softwareId;
  }

  public void setSoftwareId(String softwareId) {
    this.softwareId = softwareId;
  }

  public ClientDetails version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Version for the installed client.
   * @return version
  **/
  @ApiModelProperty(value = "Version for the installed client.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public ClientDetails component(String component) {
    this.component = component;
    return this;
  }

   /**
   * Installed client name.
   * @return component
  **/
  @ApiModelProperty(value = "Installed client name.")
  public String getComponent() {
    return component;
  }

  public void setComponent(String component) {
    this.component = component;
  }

  public ClientDetails platform(String platform) {
    this.platform = platform;
    return this;
  }

   /**
   * The operating system on which the client is installed. The version of the operating system may be included.
   * @return platform
  **/
  @ApiModelProperty(value = "The operating system on which the client is installed. The version of the operating system may be included.")
  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientDetails clientDetails = (ClientDetails) o;
    return Objects.equals(this.hostname, clientDetails.hostname) &&
        Objects.equals(this.softwareId, clientDetails.softwareId) &&
        Objects.equals(this.version, clientDetails.version) &&
        Objects.equals(this.component, clientDetails.component) &&
        Objects.equals(this.platform, clientDetails.platform);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hostname, softwareId, version, component, platform);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientDetails {\n");
    
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    softwareId: ").append(toIndentedString(softwareId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    component: ").append(toIndentedString(component)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

