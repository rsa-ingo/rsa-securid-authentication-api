/*
 * RSA SecurID Authentication API
 * This defines the RSA SecurID Authentication API. This supports a REST interface to perform multi-factor, multi-step authentications. The caller must invoke the Initialize interface to start an authentication attempt and call the Verify method until the ResponseCode is either SUCCESS, ERROR, or FAIL. Each server response contains CredentialMethods, one of which must be provided in the subjectCredentials of the next Verify call. The server verifies the entered credentials and responds with CHALLENGE or IN_PROCESS if additional information (or confirmations) are required to complete the authentication. The IN_PROCESS status is returned for authentication steps that may take a lot of time. The caller should invoke the Verify call again using the same referenceID to 'poll' on the result of a previous IN_PROCESS authentication. Alternatively, Verify responds with SUCCESS if all required authentication credentials have been provided, FAIL if the verification of a credential failed, or ERROR for malformed requests.
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rsa.securid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * This contains information to cancel a pending authentication attempt by providing the \&quot;authnAttemptId\&quot; returned by the \&quot;initialize\&quot; call. By default, an authentication attempt times-out after 3 minutes (180 seconds).
 */
@ApiModel(description = "This contains information to cancel a pending authentication attempt by providing the \"authnAttemptId\" returned by the \"initialize\" call. By default, an authentication attempt times-out after 3 minutes (180 seconds).")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-11T15:33:28.173Z")
public class Cancel {
  /**
   * Optional reason code for the cancel request.
   */
  @JsonAdapter(ReasonEnum.Adapter.class)
  public enum ReasonEnum {
    USER_ACTION("USER_ACTION"),
    
    TIME_OUT("TIME_OUT");

    private String value;

    ReasonEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ReasonEnum fromValue(String text) {
      for (ReasonEnum b : ReasonEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ReasonEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ReasonEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ReasonEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ReasonEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("reason")
  private ReasonEnum reason = ReasonEnum.USER_ACTION;

  @SerializedName("authnAttemptId")
  private String authnAttemptId = null;

  @SerializedName("removeAttemptId")
  private Boolean removeAttemptId = true;

  public Cancel reason(ReasonEnum reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Optional reason code for the cancel request.
   * @return reason
  **/
  @ApiModelProperty(value = "Optional reason code for the cancel request.")
  public ReasonEnum getReason() {
    return reason;
  }

  public void setReason(ReasonEnum reason) {
    this.reason = reason;
  }

  public Cancel authnAttemptId(String authnAttemptId) {
    this.authnAttemptId = authnAttemptId;
    return this;
  }

   /**
   * This is an authnAttemptId returned by a previous \&quot;initialize\&quot; call in the \&quot;AuthNResponse:RequestContext:authnAttemptId\&quot;.
   * @return authnAttemptId
  **/
  @ApiModelProperty(required = true, value = "This is an authnAttemptId returned by a previous \"initialize\" call in the \"AuthNResponse:RequestContext:authnAttemptId\".")
  public String getAuthnAttemptId() {
    return authnAttemptId;
  }

  public void setAuthnAttemptId(String authnAttemptId) {
    this.authnAttemptId = authnAttemptId;
  }

  public Cancel removeAttemptId(Boolean removeAttemptId) {
    this.removeAttemptId = removeAttemptId;
    return this;
  }

   /**
   * Requests that the authentication attempt ID be removed as a part of this \&quot;cancel\&quot; call.
   * @return removeAttemptId
  **/
  @ApiModelProperty(value = "Requests that the authentication attempt ID be removed as a part of this \"cancel\" call.")
  public Boolean isRemoveAttemptId() {
    return removeAttemptId;
  }

  public void setRemoveAttemptId(Boolean removeAttemptId) {
    this.removeAttemptId = removeAttemptId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Cancel cancel = (Cancel) o;
    return Objects.equals(this.reason, cancel.reason) &&
        Objects.equals(this.authnAttemptId, cancel.authnAttemptId) &&
        Objects.equals(this.removeAttemptId, cancel.removeAttemptId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reason, authnAttemptId, removeAttemptId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Cancel {\n");
    
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    authnAttemptId: ").append(toIndentedString(authnAttemptId)).append("\n");
    sb.append("    removeAttemptId: ").append(toIndentedString(removeAttemptId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

