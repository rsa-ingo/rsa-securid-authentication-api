/*
 * RSA SecurID Authentication API
 * This defines the RSA SecurID Authentication API. This supports a REST interface to perform multi-factor, multi-step authentications. The caller must invoke the Initialize interface to start an authentication attempt and call the Verify method until the ResponseCode is either SUCCESS, ERROR, or FAIL. Each server response contains CredentialMethods, one of which must be provided in the subjectCredentials of the next Verify call. The server verifies the entered credentials and responds with CHALLENGE or IN_PROCESS if additional information (or confirmations) are required to complete the authentication. The IN_PROCESS status is returned for authentication steps that may take a lot of time. The caller should invoke the Verify call again using the same referenceID to 'poll' on the result of a previous IN_PROCESS authentication. Alternatively, Verify responds with SUCCESS if all required authentication credentials have been provided, FAIL if the verification of a credential failed, or ERROR for malformed requests.
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rsa.securid.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * Authentication method prompt information.
 */
@ApiModel(description = "Authentication method prompt information.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-11T15:33:28.173Z")
public class MethodPrompt {
  @SerializedName("promptResourceId")
  private String promptResourceId = null;

  @SerializedName("defaultText")
  private String defaultText = null;

  @SerializedName("formatRegex")
  private String formatRegex = null;

  @SerializedName("defaultValue")
  private String defaultValue = null;

  @SerializedName("valueBeingDefined")
  private Boolean valueBeingDefined = false;

  @SerializedName("sensitive")
  private Boolean sensitive = true;

  @SerializedName("minLength")
  private BigDecimal minLength = null;

  @SerializedName("maxLength")
  private BigDecimal maxLength = null;

  @SerializedName("promptArgs")
  private List<String> promptArgs = null;

  public MethodPrompt promptResourceId(String promptResourceId) {
    this.promptResourceId = promptResourceId;
    return this;
  }

   /**
   * A resource ID of the prompt text. This is an immutable identified that can be used to lookup prompt text for this prompt. For example, this may be \&quot;PROMPT.LDAP.PASSWORD\&quot;, or \&quot;PROMPT.SID.NEXT_TOKENCODE\&quot;. Values that cannot be resolved locally by a client can be retrieved from the server by performing a GET on the \&quot;/authn/resources\&quot; for the required language. Once resolved, the \&quot;promptArgs\&quot; must be formatted into the prompt text place holders ({0}, {1}, etc.)
   * @return promptResourceId
  **/
  @ApiModelProperty(required = true, value = "A resource ID of the prompt text. This is an immutable identified that can be used to lookup prompt text for this prompt. For example, this may be \"PROMPT.LDAP.PASSWORD\", or \"PROMPT.SID.NEXT_TOKENCODE\". Values that cannot be resolved locally by a client can be retrieved from the server by performing a GET on the \"/authn/resources\" for the required language. Once resolved, the \"promptArgs\" must be formatted into the prompt text place holders ({0}, {1}, etc.)")
  public String getPromptResourceId() {
    return promptResourceId;
  }

  public void setPromptResourceId(String promptResourceId) {
    this.promptResourceId = promptResourceId;
  }

  public MethodPrompt defaultText(String defaultText) {
    this.defaultText = defaultText;
    return this;
  }

   /**
   * Default text for the prompt. This would be in the language requested in the \&quot;initialize\&quot; call with the \&quot;promptArgs\&quot; values already formatted.
   * @return defaultText
  **/
  @ApiModelProperty(required = true, value = "Default text for the prompt. This would be in the language requested in the \"initialize\" call with the \"promptArgs\" values already formatted.")
  public String getDefaultText() {
    return defaultText;
  }

  public void setDefaultText(String defaultText) {
    this.defaultText = defaultText;
  }

  public MethodPrompt formatRegex(String formatRegex) {
    this.formatRegex = formatRegex;
    return this;
  }

   /**
   * Format descriptor regular expression for the user&#39;s entry.
   * @return formatRegex
  **/
  @ApiModelProperty(value = "Format descriptor regular expression for the user's entry.")
  public String getFormatRegex() {
    return formatRegex;
  }

  public void setFormatRegex(String formatRegex) {
    this.formatRegex = formatRegex;
  }

  public MethodPrompt defaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * Predefined response default value. If no value is provided for this prompt, this is the value the server will use.
   * @return defaultValue
  **/
  @ApiModelProperty(value = "Predefined response default value. If no value is provided for this prompt, this is the value the server will use.")
  public String getDefaultValue() {
    return defaultValue;
  }

  public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
  }

  public MethodPrompt valueBeingDefined(Boolean valueBeingDefined) {
    this.valueBeingDefined = valueBeingDefined;
    return this;
  }

   /**
   * This is true if the value is being defined by the user&#39;s entry. Typically true for prompts of values like new passwords or new PINs. It is expected the client will provide some mechanism for the end-user to verify their knowledge of the value entered before returning same to the server. For example, the client may request the value twice and validate that both values match.
   * @return valueBeingDefined
  **/
  @ApiModelProperty(value = "This is true if the value is being defined by the user's entry. Typically true for prompts of values like new passwords or new PINs. It is expected the client will provide some mechanism for the end-user to verify their knowledge of the value entered before returning same to the server. For example, the client may request the value twice and validate that both values match.")
  public Boolean isValueBeingDefined() {
    return valueBeingDefined;
  }

  public void setValueBeingDefined(Boolean valueBeingDefined) {
    this.valueBeingDefined = valueBeingDefined;
  }

  public MethodPrompt sensitive(Boolean sensitive) {
    this.sensitive = sensitive;
    return this;
  }

   /**
   * This is true if the value is considered sensitive and its entry should be masked by the client.
   * @return sensitive
  **/
  @ApiModelProperty(value = "This is true if the value is considered sensitive and its entry should be masked by the client.")
  public Boolean isSensitive() {
    return sensitive;
  }

  public void setSensitive(Boolean sensitive) {
    this.sensitive = sensitive;
  }

  public MethodPrompt minLength(BigDecimal minLength) {
    this.minLength = minLength;
    return this;
  }

   /**
   * Minimum allowed length in characters.
   * @return minLength
  **/
  @ApiModelProperty(value = "Minimum allowed length in characters.")
  public BigDecimal getMinLength() {
    return minLength;
  }

  public void setMinLength(BigDecimal minLength) {
    this.minLength = minLength;
  }

  public MethodPrompt maxLength(BigDecimal maxLength) {
    this.maxLength = maxLength;
    return this;
  }

   /**
   * Maximum allowed length in characters.
   * @return maxLength
  **/
  @ApiModelProperty(value = "Maximum allowed length in characters.")
  public BigDecimal getMaxLength() {
    return maxLength;
  }

  public void setMaxLength(BigDecimal maxLength) {
    this.maxLength = maxLength;
  }

  public MethodPrompt promptArgs(List<String> promptArgs) {
    this.promptArgs = promptArgs;
    return this;
  }

  public MethodPrompt addPromptArgsItem(String promptArgsItem) {
    if (this.promptArgs == null) {
      this.promptArgs = new ArrayList<String>();
    }
    this.promptArgs.add(promptArgsItem);
    return this;
  }

   /**
   * Get promptArgs
   * @return promptArgs
  **/
  @ApiModelProperty(value = "")
  public List<String> getPromptArgs() {
    return promptArgs;
  }

  public void setPromptArgs(List<String> promptArgs) {
    this.promptArgs = promptArgs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MethodPrompt methodPrompt = (MethodPrompt) o;
    return Objects.equals(this.promptResourceId, methodPrompt.promptResourceId) &&
        Objects.equals(this.defaultText, methodPrompt.defaultText) &&
        Objects.equals(this.formatRegex, methodPrompt.formatRegex) &&
        Objects.equals(this.defaultValue, methodPrompt.defaultValue) &&
        Objects.equals(this.valueBeingDefined, methodPrompt.valueBeingDefined) &&
        Objects.equals(this.sensitive, methodPrompt.sensitive) &&
        Objects.equals(this.minLength, methodPrompt.minLength) &&
        Objects.equals(this.maxLength, methodPrompt.maxLength) &&
        Objects.equals(this.promptArgs, methodPrompt.promptArgs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(promptResourceId, defaultText, formatRegex, defaultValue, valueBeingDefined, sensitive, minLength, maxLength, promptArgs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MethodPrompt {\n");
    
    sb.append("    promptResourceId: ").append(toIndentedString(promptResourceId)).append("\n");
    sb.append("    defaultText: ").append(toIndentedString(defaultText)).append("\n");
    sb.append("    formatRegex: ").append(toIndentedString(formatRegex)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    valueBeingDefined: ").append(toIndentedString(valueBeingDefined)).append("\n");
    sb.append("    sensitive: ").append(toIndentedString(sensitive)).append("\n");
    sb.append("    minLength: ").append(toIndentedString(minLength)).append("\n");
    sb.append("    maxLength: ").append(toIndentedString(maxLength)).append("\n");
    sb.append("    promptArgs: ").append(toIndentedString(promptArgs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

